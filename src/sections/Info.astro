---
import TriggeredEvent from "@/components/TriggeredEvent.astro"
import { Image } from "astro:assets"

interface Props {
  eventoActivo?: boolean
}

const { eventoActivo = false } = Astro.props
---

<div class="mx-auto max-w-2xl p-4 pb-32 lg:max-w-6xl" id="info">
  <div
    class="mx-auto flex flex-row items-center justify-center gap-x-4 text-lg font-semibold tracking-tight text-balance text-gray-950 md:gap-x-8 md:text-2xl lg:text-3xl xl:text-4xl"
  >
    <div class="shrink-0">
      <Image
        class="mx-auto inline-block size-20 rounded-full md:size-28"
        src="/avatar.jpg"
        alt="Juanse Black"
        width={112}
        height={112}
      />
    </div>
    <span class="inline-block py-4 text-left text-white md:py-6 lg:py-8">
      ¿Estás preparado para
      <br />
      pasar
      <span class="magic relative inline-block">
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
            <path
              d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
            ></path>
          </svg>
        </span>
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
            <path
              d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
            ></path>
          </svg>
        </span>
        <span class="magic-star">
          <svg viewBox="0 0 512 512">
            <path
              d="M512 255.1c0 11.34-7.406 20.86-18.44 23.64l-171.3 42.78l-42.78 171.1C276.7 504.6 267.2 512 255.9 512s-20.84-7.406-23.62-18.44l-42.66-171.2L18.47 279.6C7.406 276.8 0 267.3 0 255.1c0-11.34 7.406-20.83 18.44-23.61l171.2-42.78l42.78-171.1C235.2 7.406 244.7 0 256 0s20.84 7.406 23.62 18.44l42.78 171.2l171.2 42.78C504.6 235.2 512 244.6 512 255.1z"
            ></path>
          </svg>
        </span>
        <span class="font-bold">Un dia Inolvidable</span>?
      </span>
    </span>
  </div>
  <div
    class="view-animate-[--subjectReveal] animate-zoom-in animate-range-[entry_0%_cover_20%] relative grid scroll-mt-[31rem] grid-cols-1 gap-4 pt-10 sm:mt-4 md:scroll-mt-[34rem] lg:scroll-mt-[26rem] lg:grid-cols-6"
    id="info"
  >
    {
      !eventoActivo ? (
        <p class="absolute inset-0 z-10 m-auto flex h-full w-full items-center justify-center px-4 text-center text-3xl leading-tight font-extrabold text-white drop-shadow-[0_0_25px_rgba(0,0,0,0.85)] md:text-4xl lg:text-5xl">
          ¡El evento ya terminó, gracias tu participación!
        </p>
      ) : (
        <TriggeredEvent eventoActivo={eventoActivo} />
      )
    }
  </div>

  <script>
    let index = 0
    let interval = 1000

    const rand = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1)) + min

    const animate = (star: HTMLElement) => {
      star.style.setProperty("--star-left", `${rand(-10, 100)}%`)
      star.style.setProperty("--star-top", `${rand(-40, 80)}%`)

      star.style.animation = "none"
    }

    for (const star of document.getElementsByClassName(
      "magic-star"
    ) as HTMLCollectionOf<HTMLElement>) {
      setTimeout(
        () => {
          animate(star)

          setInterval(() => animate(star), interval)
        },
        index++ * (interval / 3)
      )
    }
  </script>

  <style>
    /* letter animation START  */
    .magic-star {
      --size: clamp(20px, 1.5vw, 30px);
      animation: scale 700ms ease forwards;
      display: block;
      height: var(--size);
      left: var(--star-left);
      position: absolute;
      top: var(--star-top);
      width: var(--size);
    }

    .magic > .magic-star > svg {
      animation: rotate 1000ms linear infinite;
      display: block;
      opacity: 0.7;
    }

    .magic > .magic-star > svg > path {
      fill: #dfdf18;
    }

    .magic > .magic-text {
      animation: background-pan 3s linear infinite;
      background: linear-gradient(to right, #383acf, #61e2e5, #383acf, #383acf);
      background-size: 200%;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      white-space: nowrap;
    }
  </style>
</div>
